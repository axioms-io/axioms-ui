/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface PasswordlessCode {
        "btnCssClass": string;
        "channel": string;
        "clientId": string;
        "emailLabel": string;
        "emailPlaceholder": string;
        "getIdTokenPayload": () => Promise<any>;
        "inputCssClass": string;
        "isAuthenticated": () => Promise<boolean>;
        "isPopup": boolean;
        "logout": () => Promise<void>;
        "otpCodeButtonLabel": string;
        "otpCodeLabel": string;
        "otpCodePlaceholder": string;
        "otpLength": number;
        "phoneLabel": string;
        "phonePlaceholder": string;
        "startButtonLabel": string;
        "tenantDomain": string;
    }
    interface PasswordlessLink {
        "btnCssClass": string;
        "channel": string;
        "clientId": string;
        "emailLabel": string;
        "emailPlaceholder": string;
        "getIdTokenPayload": () => Promise<any>;
        "inputCssClass": string;
        "isAuthenticated": () => Promise<boolean>;
        "isPopup": boolean;
        "logout": () => Promise<void>;
        "phoneLabel": string;
        "phonePlaceholder": string;
        "startButtonLabel": string;
        "tenantDomain": string;
    }
}
declare global {
    interface HTMLPasswordlessCodeElement extends Components.PasswordlessCode, HTMLStencilElement {
    }
    var HTMLPasswordlessCodeElement: {
        prototype: HTMLPasswordlessCodeElement;
        new (): HTMLPasswordlessCodeElement;
    };
    interface HTMLPasswordlessLinkElement extends Components.PasswordlessLink, HTMLStencilElement {
    }
    var HTMLPasswordlessLinkElement: {
        prototype: HTMLPasswordlessLinkElement;
        new (): HTMLPasswordlessLinkElement;
    };
    interface HTMLElementTagNameMap {
        "passwordless-code": HTMLPasswordlessCodeElement;
        "passwordless-link": HTMLPasswordlessLinkElement;
    }
}
declare namespace LocalJSX {
    interface PasswordlessCode {
        "btnCssClass"?: string;
        "channel"?: string;
        "clientId": string;
        "emailLabel"?: string;
        "emailPlaceholder"?: string;
        "inputCssClass"?: string;
        "isPopup"?: boolean;
        "onAuthCompleted"?: (event: CustomEvent<boolean>) => void;
        "otpCodeButtonLabel"?: string;
        "otpCodeLabel"?: string;
        "otpCodePlaceholder"?: string;
        "otpLength"?: number;
        "phoneLabel"?: string;
        "phonePlaceholder"?: string;
        "startButtonLabel"?: string;
        "tenantDomain": string;
    }
    interface PasswordlessLink {
        "btnCssClass"?: string;
        "channel"?: string;
        "clientId": string;
        "emailLabel"?: string;
        "emailPlaceholder"?: string;
        "inputCssClass"?: string;
        "isPopup"?: boolean;
        "onAuthCompleted"?: (event: CustomEvent<boolean>) => void;
        "phoneLabel"?: string;
        "phonePlaceholder"?: string;
        "startButtonLabel"?: string;
        "tenantDomain": string;
    }
    interface IntrinsicElements {
        "passwordless-code": PasswordlessCode;
        "passwordless-link": PasswordlessLink;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "passwordless-code": LocalJSX.PasswordlessCode & JSXBase.HTMLAttributes<HTMLPasswordlessCodeElement>;
            "passwordless-link": LocalJSX.PasswordlessLink & JSXBase.HTMLAttributes<HTMLPasswordlessLinkElement>;
        }
    }
}
